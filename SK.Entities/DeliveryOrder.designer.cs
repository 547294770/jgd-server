#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SK.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="JGD")]
	public partial class DeliveryOrderDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertDeliveryOrder(DeliveryOrder instance);
    partial void UpdateDeliveryOrder(DeliveryOrder instance);
    partial void DeleteDeliveryOrder(DeliveryOrder instance);
    #endregion
		
		public DeliveryOrderDataContext() : 
				base(global::SK.Entities.Properties.Settings.Default.JGDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DeliveryOrderDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DeliveryOrderDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DeliveryOrderDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DeliveryOrderDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DeliveryOrder> DeliveryOrder
		{
			get
			{
				return this.GetTable<DeliveryOrder>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryOrder")]
	public partial class DeliveryOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _SourceID;
		
		private OrderType _Type;
		
		private string _Content;
		
		private System.DateTime _DeliveryAt;
		
		private string _VehicleInfo;
		
		private System.DateTime _CreateAt;
		
		private string _UserID;
		
		private string _UserName;
		
		private string _OrderNo;
		
		private string _ProcessingNo;
		
		private string _TimeSection;
		
		private string _Time1;
		
		private string _Time2;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnSourceIDChanging(string value);
    partial void OnSourceIDChanged();
    partial void OnTypeChanging(OrderType value);
    partial void OnTypeChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnDeliveryAtChanging(System.DateTime value);
    partial void OnDeliveryAtChanged();
    partial void OnVehicleInfoChanging(string value);
    partial void OnVehicleInfoChanged();
    partial void OnCreateAtChanging(System.DateTime value);
    partial void OnCreateAtChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnProcessingNoChanging(string value);
    partial void OnProcessingNoChanged();
    partial void OnTimeSectionChanging(string value);
    partial void OnTimeSectionChanged();
    partial void OnTime1Changing(string value);
    partial void OnTime1Changed();
    partial void OnTime2Changing(string value);
    partial void OnTime2Changed();
    #endregion
		
		public DeliveryOrder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="VarChar(36) NOT NULL", CanBeNull=false)]
		public string SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL", CanBeNull=false)]
		public OrderType Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryAt", DbType="Date NOT NULL")]
		public System.DateTime DeliveryAt
		{
			get
			{
				return this._DeliveryAt;
			}
			set
			{
				if ((this._DeliveryAt != value))
				{
					this.OnDeliveryAtChanging(value);
					this.SendPropertyChanging();
					this._DeliveryAt = value;
					this.SendPropertyChanged("DeliveryAt");
					this.OnDeliveryAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleInfo", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string VehicleInfo
		{
			get
			{
				return this._VehicleInfo;
			}
			set
			{
				if ((this._VehicleInfo != value))
				{
					this.OnVehicleInfoChanging(value);
					this.SendPropertyChanging();
					this._VehicleInfo = value;
					this.SendPropertyChanged("VehicleInfo");
					this.OnVehicleInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreateAt
		{
			get
			{
				return this._CreateAt;
			}
			set
			{
				if ((this._CreateAt != value))
				{
					this.OnCreateAtChanging(value);
					this.SendPropertyChanging();
					this._CreateAt = value;
					this.SendPropertyChanged("CreateAt");
					this.OnCreateAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(36) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessingNo", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ProcessingNo
		{
			get
			{
				return this._ProcessingNo;
			}
			set
			{
				if ((this._ProcessingNo != value))
				{
					this.OnProcessingNoChanging(value);
					this.SendPropertyChanging();
					this._ProcessingNo = value;
					this.SendPropertyChanged("ProcessingNo");
					this.OnProcessingNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSection", CanBeNull=false)]
		public string TimeSection
		{
			get
			{
				return this._TimeSection;
			}
			set
			{
				if ((this._TimeSection != value))
				{
					this.OnTimeSectionChanging(value);
					this.SendPropertyChanging();
					this._TimeSection = value;
					this.SendPropertyChanged("TimeSection");
					this.OnTimeSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time1", CanBeNull=false)]
		public string Time1
		{
			get
			{
				return this._Time1;
			}
			set
			{
				if ((this._Time1 != value))
				{
					this.OnTime1Changing(value);
					this.SendPropertyChanging();
					this._Time1 = value;
					this.SendPropertyChanged("Time1");
					this.OnTime1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time2", CanBeNull=false)]
		public string Time2
		{
			get
			{
				return this._Time2;
			}
			set
			{
				if ((this._Time2 != value))
				{
					this.OnTime2Changing(value);
					this.SendPropertyChanging();
					this._Time2 = value;
					this.SendPropertyChanged("Time2");
					this.OnTime2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
