#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SK.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="JGD")]
	public partial class ProcessingOrderDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertProcessingOrder(ProcessingOrder instance);
    partial void UpdateProcessingOrder(ProcessingOrder instance);
    partial void DeleteProcessingOrder(ProcessingOrder instance);
    #endregion
		
		public ProcessingOrderDataContext() : 
				base(global::SK.Entities.Properties.Settings.Default.JGDConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProcessingOrderDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProcessingOrderDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProcessingOrderDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProcessingOrderDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ProcessingOrder> ProcessingOrder
		{
			get
			{
				return this.GetTable<ProcessingOrder>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProcessingOrder")]
	public partial class ProcessingOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _OrderNo;
		
		private string _Content;
		
		private System.DateTime _CreateAt;
		
		private OrderStatus _Status;
		
		private string _UserID;
		
		private string _UserName;
		
		private System.DateTime _UpdateAt;
		
		private DeliveryType _DelType;
		
		private SK.Entities.ProcessingOrder.PickUpType _PickType;
		
		private string _Pic;

        private string _PickUpPic;

        private bool _IsReject;
		
		private string _StatusID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnCreateAtChanging(System.DateTime value);
    partial void OnCreateAtChanged();
    partial void OnStatusChanging(OrderStatus value);
    partial void OnStatusChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUpdateAtChanging(System.DateTime value);
    partial void OnUpdateAtChanged();
    partial void OnDelTypeChanging(DeliveryType value);
    partial void OnDelTypeChanged();
    partial void OnPickTypeChanging(SK.Entities.ProcessingOrder.PickUpType value);
    partial void OnPickTypeChanged();
    partial void OnPicChanging(string value);
    partial void OnPicChanged();
    partial void OnIsRejectChanging(bool value);
    partial void OnIsRejectChanged();
    partial void OnStatusIDChanging(string value);
    partial void OnStatusIDChanged();
    #endregion
		
		public ProcessingOrder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(36) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateAt", DbType="DateTime NOT NULL")]
		public System.DateTime CreateAt
		{
			get
			{
				return this._CreateAt;
			}
			set
			{
				if ((this._CreateAt != value))
				{
					this.OnCreateAtChanging(value);
					this.SendPropertyChanging();
					this._CreateAt = value;
					this.SendPropertyChanged("CreateAt");
					this.OnCreateAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL", CanBeNull=false)]
		public OrderStatus Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(36) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateAt", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateAt
		{
			get
			{
				return this._UpdateAt;
			}
			set
			{
				if ((this._UpdateAt != value))
				{
					this.OnUpdateAtChanging(value);
					this.SendPropertyChanging();
					this._UpdateAt = value;
					this.SendPropertyChanged("UpdateAt");
					this.OnUpdateAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelType", DbType="Int NOT NULL", CanBeNull=false)]
		public DeliveryType DelType
		{
			get
			{
				return this._DelType;
			}
			set
			{
				if ((this._DelType != value))
				{
					this.OnDelTypeChanging(value);
					this.SendPropertyChanging();
					this._DelType = value;
					this.SendPropertyChanged("DelType");
					this.OnDelTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickType", DbType="Int NOT NULL", CanBeNull=false)]
		public SK.Entities.ProcessingOrder.PickUpType PickType
		{
			get
			{
				return this._PickType;
			}
			set
			{
				if ((this._PickType != value))
				{
					this.OnPickTypeChanging(value);
					this.SendPropertyChanging();
					this._PickType = value;
					this.SendPropertyChanged("PickType");
					this.OnPickTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pic", CanBeNull=false)]
		public string Pic
		{
			get
			{
				return this._Pic;
			}
			set
			{
				if ((this._Pic != value))
				{
					this.OnPicChanging(value);
					this.SendPropertyChanging();
					this._Pic = value;
					this.SendPropertyChanged("Pic");
					this.OnPicChanged();
				}
			}
		}


        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PickUpPic", CanBeNull = false)]
        public string PickUpPic
        {
            get
            {
                return this._PickUpPic;
            }
            set
            {
                if ((this._PickUpPic != value))
                {
                    this.OnPicChanging(value);
                    this.SendPropertyChanging();
                    this._PickUpPic = value;
                    this.SendPropertyChanged("PickUpPic");
                    this.OnPicChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReject")]
		public bool IsReject
		{
			get
			{
				return this._IsReject;
			}
			set
			{
				if ((this._IsReject != value))
				{
					this.OnIsRejectChanging(value);
					this.SendPropertyChanging();
					this._IsReject = value;
					this.SendPropertyChanged("IsReject");
					this.OnIsRejectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", CanBeNull=false)]
		public string StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
